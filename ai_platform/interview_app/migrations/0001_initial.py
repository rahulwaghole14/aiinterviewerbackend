# Generated by Django 5.1.6 on 2025-08-22 05:43

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='InterviewSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('session_key', models.CharField(blank=True, max_length=40, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('candidate_name', models.CharField(default='N/A', max_length=100)),
                ('candidate_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('job_description', models.TextField(blank=True, null=True)),
                ('resume_text', models.TextField(blank=True, null=True)),
                ('scheduled_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('SCHEDULED', 'Scheduled'), ('COMPLETED', 'Completed'), ('EXPIRED', 'Expired')], default='SCHEDULED', max_length=20)),
                ('language_code', models.CharField(default='en', max_length=10)),
                ('accent_tld', models.CharField(default='com', max_length=10)),
                ('is_evaluated', models.BooleanField(default=False)),
                ('resume_summary', models.TextField(blank=True, null=True)),
                ('answers_feedback', models.TextField(blank=True, null=True)),
                ('answers_score', models.FloatField(blank=True, null=True)),
                ('resume_feedback', models.TextField(blank=True, null=True)),
                ('resume_score', models.FloatField(blank=True, null=True)),
                ('keyword_analysis', models.TextField(blank=True, null=True)),
                ('overall_performance_feedback', models.TextField(blank=True, null=True)),
                ('overall_performance_score', models.FloatField(blank=True, null=True)),
                ('behavioral_analysis', models.TextField(blank=True, null=True)),
                ('id_verification_status', models.CharField(default='Pending', max_length=50)),
                ('id_card_image', models.ImageField(blank=True, null=True, upload_to='id_cards/')),
                ('extracted_id_details', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='InterviewQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField()),
                ('question_type', models.CharField(choices=[('TECHNICAL', 'Technical'), ('BEHAVIORAL', 'Behavioral'), ('CODING', 'Coding Challenge')], default='TECHNICAL', max_length=50)),
                ('audio_url', models.URLField(blank=True, max_length=500, null=True)),
                ('question_level', models.CharField(default='MAIN', max_length=10)),
                ('transcribed_answer', models.TextField(blank=True, null=True)),
                ('order', models.PositiveIntegerField()),
                ('words_per_minute', models.IntegerField(blank=True, null=True)),
                ('filler_word_count', models.IntegerField(blank=True, null=True)),
                ('response_time_seconds', models.FloatField(blank=True, null=True)),
                ('coding_language', models.CharField(blank=True, choices=[('PYTHON', 'Python'), ('JAVASCRIPT', 'JavaScript'), ('JAVA', 'Java'), ('CSHARP', 'C#'), ('PHP', 'PHP'), ('RUBY', 'Ruby'), ('SQL', 'SQL')], max_length=20, null=True)),
                ('parent_question', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='follow_ups', to='interview_app.interviewquestion')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='interview_app.interviewsession')),
            ],
        ),
        migrations.CreateModel(
            name='CodeSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submitted_code', models.TextField()),
                ('language', models.CharField(default='PYTHON', max_length=20)),
                ('passed_all_tests', models.BooleanField(default=False)),
                ('output_log', models.TextField(blank=True, help_text='Stores the results of running against all test cases.', null=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='interview_app.interviewquestion')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='code_submissions', to='interview_app.interviewsession')),
            ],
        ),
        migrations.CreateModel(
            name='TestCase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('input_data', models.TextField(help_text="Input for the function, e.g., '5' for factorial(5)")),
                ('expected_output', models.TextField(help_text="Expected result, e.g., '120'")),
                ('is_hidden', models.BooleanField(default=False, help_text='Hidden tests are not shown to the candidate but are used for final scoring.')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_cases', to='interview_app.interviewquestion')),
            ],
        ),
        migrations.CreateModel(
            name='WarningLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('warning_type', models.CharField(max_length=50)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='interview_app.interviewsession')),
            ],
        ),
    ]
